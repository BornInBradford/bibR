[
["index.html", "A R discussion with Born in Bradford and Bradford NHS 1 Mission", " A R discussion with Born in Bradford and Bradford NHS Ning Lu 2019-12-10 1 Mission This is a collection of R discussion in relation to Born in Bradford and Bradford NHS. "],
["public-health-api.html", "2 Public Health API", " 2 Public Health API Fingertips is a web platform that provides easy access to in-depth analysis of a wide range of health and health related data in thematic Profiles. All profiles can be accessed via: http://fingertips.phe.org.uk/ The project was initially designed and built by the Eastern Region Public Health Observatory, and is now owned by PHE. The platform grows quickly both in functionality and content and is served by one common database called PHOLIO. Fingertips is used to create the public health outcome framework data tool, and the healthier lives application. It also underpins Health profiles, the mental health intelligence network tools, tobacco control profiles, the NCMP Data tool, NHS Health Check, National General Practice Profiles and the children and young people’s benchmarking tool among others. R package fingertipsR is to interact with Public Health England’s Fingertips data tool. Stable version from CRAN install.packages(&quot;fingertipsR&quot;) The latest development version from github # install.packages(&quot;devtools&quot;) remotes::install_github(&quot;rOpenSci/fingertipsR&quot;, build_vignettes = TRUE, dependencies = &quot;suggests&quot;) This is a workflow example from the R package to demonstrate how to download data for the indicators on Healthy Life Expectancy at Birth from the Public Health Outcomes Framework profile. The profiles() function presents all of the available profiles: library(fingertipsR) profs &lt;- profiles() profs &lt;- profs[grepl(&quot;Public Health Outcomes Framework&quot;, profs$ProfileName),] head(profs) #&gt; # A tibble: 6 x 4 #&gt; ProfileID ProfileName DomainID DomainName #&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; #&gt; 1 19 Public Health Outcomes Fr~ 1.00e6 Overarching indicators #&gt; 2 19 Public Health Outcomes Fr~ 1.00e6 Wider determinants of hea~ #&gt; 3 19 Public Health Outcomes Fr~ 1.00e6 Health improvement #&gt; 4 19 Public Health Outcomes Fr~ 1.00e6 Health protection #&gt; 5 19 Public Health Outcomes Fr~ 1.00e6 Healthcare and premature ~ #&gt; 6 19 Public Health Outcomes Fr~ 1.94e9 Supporting information This table shows that the ProfileID for the Public Health Outcomes Framework is 19. This can be used as an input for the indicators() function: inds &lt;- indicators(ProfileID = 19) print(inds[grepl(&quot;Healthy&quot;, inds$IndicatorName), c(&quot;IndicatorID&quot;, &quot;IndicatorName&quot;)]) # A tibble: 1 x 2 IndicatorID IndicatorName &lt;int&gt; &lt;fct&gt; 1 90362 A01a - Healthy life expectancy at birth Healthy Life Expectancy at Birth has the IndicatorID equal to 90362. Finally, the data can be extracted using the fingertips_data() function using that IndicatorID and filter() function in dplyr. df &lt;- fingertips_data(IndicatorID = 90362) head(df %&gt;% filter(AreaName == &quot;Yorkshire and the Humber region&quot;)) IndicatorID IndicatorName ParentCode ParentName AreaCode 1 90362 Healthy life expectancy at birth E92000001 England E12000003 2 90362 Healthy life expectancy at birth E92000001 England E12000003 3 90362 Healthy life expectancy at birth E92000001 England E12000003 4 90362 Healthy life expectancy at birth E92000001 England E12000003 5 90362 Healthy life expectancy at birth E92000001 England E12000003 6 90362 Healthy life expectancy at birth E92000001 England E12000003 AreaName AreaType Sex Age CategoryType Category Timeperiod 1 Yorkshire and the Humber region Region Male All ages &lt;NA&gt; &lt;NA&gt; 2009 - 11 2 Yorkshire and the Humber region Region Female All ages &lt;NA&gt; &lt;NA&gt; 2009 - 11 3 Yorkshire and the Humber region Region Male All ages &lt;NA&gt; &lt;NA&gt; 2010 - 12 4 Yorkshire and the Humber region Region Female All ages &lt;NA&gt; &lt;NA&gt; 2010 - 12 5 Yorkshire and the Humber region Region Male All ages &lt;NA&gt; &lt;NA&gt; 2011 - 13 6 Yorkshire and the Humber region Region Female All ages &lt;NA&gt; &lt;NA&gt; 2011 - 13 Value LowerCI95.0limit UpperCI95.0limit LowerCI99.8limit UpperCI99.8limit Count 1 60.84033 60.38649 61.29417 NA NA NA 2 61.97605 61.51676 62.43533 NA NA NA 3 60.90318 60.44972 61.35665 NA NA NA 4 61.78648 61.30470 62.26827 NA NA NA 5 60.95582 60.47015 61.44150 NA NA NA 6 61.60701 61.10430 62.10971 NA NA NA Denominator Valuenote RecentTrend ComparedtoEnglandvalueorpercentiles 1 NA &lt;NA&gt; &lt;NA&gt; Worse 2 NA &lt;NA&gt; &lt;NA&gt; Worse 3 NA &lt;NA&gt; &lt;NA&gt; Worse 4 NA &lt;NA&gt; &lt;NA&gt; Worse 5 NA &lt;NA&gt; &lt;NA&gt; Worse 6 NA &lt;NA&gt; &lt;NA&gt; Worse ComparedtoRegionvalueorpercentiles TimeperiodSortable Newdata Comparedtogoal 1 Not compared 20090000 &lt;NA&gt; &lt;NA&gt; 2 Not compared 20090000 &lt;NA&gt; &lt;NA&gt; 3 Not compared 20100000 &lt;NA&gt; &lt;NA&gt; 4 Not compared 20100000 &lt;NA&gt; &lt;NA&gt; 5 Not compared 20110000 &lt;NA&gt; &lt;NA&gt; 6 Not compared 20110000 &lt;NA&gt; &lt;NA&gt; "],
["mari-kondo.html", "3 Mari Kondo 3.1 Tidy your files", " 3 Mari Kondo Marie Kondo is the author of The Life-Changing Magic of Tidying Up: The Japanese Art of Decluttering and Organizing. The best way to choose what to keep and what to throw away is to take each item in one’s hand and ask: “Does this spark joy?” If it does, keep it. If not, dispose of it. This is not only the simplest but also the most accurate yardstick by which to judge. 3.1 Tidy your files There’re a number of ways to organise data science work. The key is to set up Rproject and GitHub. Here we list two main approaches to achieve this end. The first way is the pull way where we get both Rproject and git integrated from outside - GitHub. You use the github function from usethis package and put down (“OWNER/REPO_NAME”) and opt for https when you get asked on git protocol. &gt; usethis::create_from_github(&quot;dataning/learn_usethis&quot;) Which git protocol to use? (enter 0 to exit) 1: ssh &lt;-- presumes that you have set up ssh keys 2: https &lt;-- choose this if you don&#39;t have ssh keys (or don&#39;t know if you do) Selection: 2 ● Tip: To suppress this menu in future, put `options(usethis.protocol = &quot;https&quot;)` in your script or in a user- or project-level startup file, &#39;.Rprofile&#39;. Call `usethis::edit_r_profile()` to open it for editing. ✔ Cloning repo from &#39;https://github.com/dataning/learn_usethis.git&#39; into &#39;/Users/sushicat/Desktop/learn_usethis&#39; ✔ Setting active project to &#39;/Users/sushicat/Desktop/learn_usethis&#39; ✔ Writing &#39;learn_usethis.Rproj&#39; ✔ Adding &#39;.Rproj.user&#39; to &#39;.gitignore&#39; ✔ Opening &#39;/Users/sushicat/Desktop/learn_usethis/&#39; in new RStudio session ✔ Setting active project to &#39;&lt;no active project&gt;&#39; The second way is to imagine you’re working in a random folder and you wish to set up the Rproject &gt; library(usethis) &gt; library(here) here() starts at /Users/sushicat/Dropbox/R_Me &gt; here::here() [1] &quot;/Users/sushicat/Dropbox/R_Me&quot; &gt; path &lt;- file.path(here(), &quot;learn_usethis&quot;) create_project(path) ✔ Creating &#39;/Users/sushicat/Dropbox/R_Me/learn_usethis/&#39; ✔ Setting active project to &#39;/Users/sushicat/Dropbox/R_Me/learn_usethis&#39; ✔ Creating &#39;R/&#39; ✔ Writing &#39;learn_usethis.Rproj&#39; ✔ Adding &#39;.Rproj.user&#39; to &#39;.gitignore&#39; ✔ Opening &#39;/Users/sushicat/Dropbox/R_Me/learn_usethis/&#39; in new RStudio session ✔ Setting active project to &#39;&lt;no active project&gt;&#39; "],
["care-quality-api.html", "4 Care Quality API", " 4 Care Quality API We describe our methods in this chapter. "],
["road-accidents.html", "5 Road Accidents 5.1 Google data 5.2 DVLA data", " 5 Road Accidents 5.1 Google data 5.2 DVLA data "],
["alfred-pennyworth.html", "6 Alfred Pennyworth 6.1 Log your work", " 6 Alfred Pennyworth Alfred Pennyworth is Bruce Wayne (Batman)’s loyal and tireless butler, housekeeper, legal guardian, best friend, aide-de-camp. What was the point of all those push-ups if you can’t even lift up a bloody log? 6.1 Log your work First, choose New Project and New Directiory. Second, choose Book Project using bookdown and pick a name as well as your preferred directory. RStudio will automatically set up the Rproj as well as the folder skeleton. Third, tie the existing project with Git through the usethis package. It will re-organise the existing project folder and prepare the Git integration. &gt; usethis::use_git() ✔ Setting active project to &#39;/Users/sushicat/Dropbox/R_Me/R_DE&#39; ✔ Initialising Git repo ✔ Adding &#39;.Rhistory&#39;, &#39;.RData&#39;, &#39;.Rproj.user&#39; to &#39;.gitignore&#39; There are 15 uncommitted files: * &#39;_bookdown.yml&#39; * &#39;_output.yml&#39; * &#39;.gitignore&#39; * &#39;01-intro.Rmd&#39; * &#39;02-literature.Rmd&#39; * &#39;03-method.Rmd&#39; * &#39;04-application.Rmd&#39; * &#39;05-summary.Rmd&#39; * &#39;06-references.Rmd&#39; * &#39;book.bib&#39; * &#39;index.Rmd&#39; * &#39;preamble.tex&#39; * &#39;R_DE.Rproj&#39; * &#39;README.md&#39; * &#39;style.css&#39; Is it ok to commit them? 1: Not now 2: For sure 3: No way Selection: 2 ✔ Adding files ✔ Commit with message &#39;Initial commit&#39; ● A restart of RStudio is required to activate the Git pane Restart now? 1: Not now 2: Yup 3: Absolutely not Selection: 2 Fourth, create a GitHub repo through the usethis package and if the project name is available on the owner’s repos. When facing git protocol, choose https. &gt; usethis::use_github() ✔ Setting active project to &#39;/Users/sushicat/Dropbox/R_Me/R_DE&#39; ✔ Checking that current branch is &#39;master&#39; Which git protocol to use? (enter 0 to exit) 1: ssh &lt;-- presumes that you have set up ssh keys 2: https &lt;-- choose this if you don&#39;t have ssh keys (or don&#39;t know if you do) Selection: 2 ● Tip: To suppress this menu in future, put `options(usethis.protocol = &quot;https&quot;)` in your script or in a user- or project-level startup file, &#39;.Rprofile&#39;. Call `usethis::edit_r_profile()` to open it for editing. ● Check title and description Name: Bradford Description: Are title and description ok? 1: Yeah 2: Not now 3: Absolutely not Selection: 1 ✔ Creating GitHub repository ✔ Setting remote &#39;origin&#39; to &#39;https://github.com/dataning/R_DE.git&#39; ✔ Pushing &#39;master&#39; branch to GitHub and setting remote tracking branch ✔ Opening URL &#39;https://github.com/dataning/R_DE&#39; Fifth, create and save a random R.script in the current project. The commit and push the change of the project to your GitHub repo. You can go to your GitHub repo and check if the R script has been added. This should tell you whether your Rproj and GitHub Repo are fully synced/integrated. Sixth, go to Netlify and deploy your GitHub repo on Netlify. This will give you the ability to perform continuous deployment as well as deployment to custom domain. Type in your Rpoj’s GitHub repo name. You need to put down _book in Publish directory. "],
["elastigirl.html", "7 Elastigirl 7.1 Tiki-taka your workflow", " 7 Elastigirl Elastigirl, also known as Mrs. Incredible, is a fictional character who appears in The Incredibles. When designing the Incredible family, Brad Bird wanted each of their superpowers to be related to their personality. He felt that as a mother, Helen was required by society to be pulled in many different directions, which led to her being given an elastic ability. The same we can say to all sort of data science projects. We are always required by different stakeholders to be pull in many different directions. For us, we have to nail down where we are and how to initiate a new project first. 7.1 Tiki-taka your workflow First of all, we find where we stand. &gt; here::here() [1] &quot;/Users/sushicat/Dropbox/R_Me/Hero_book&quot; Second, we find out what we are being surrounded. &gt; fs::dir_ls() 01-think.Rmd 02-pm.Rmd 03-load-data.Rmd 04-tidy-data.Rmd 05-bayesian.Rmd 06-Elastigirl_1.Rmd 06_Elastigirl_1.R 20-references.Rmd CreditCard Creditcard_hack.R Data Hero_book.Rproj Hero_book.log README.md _book _bookdown.yml _bookdown_files _output.yml book.bib index.Rmd packages.bib preamble.tex style.css Third, we pick somewhere (in this case - the data folder) to explore further. &gt; fs::dir_ls(&quot;Data&quot;) &gt; fs::dir_ls(&quot;Data/Subway_delays&quot;) Data/Subway_delays/Subway&amp;SRT_Logs_April_2018.xlsx Data/Subway_delays/Subway&amp;SRT_Logs_February_2018.xlsx Data/Subway_delays/Subway&amp;SRT_Logs_March_2018.xlsx Data/Subway_delays/Subway&amp;SRT_Logs_May_2018.xlsx Data/Subway_delays/Subway_&amp;_SRT_Logs_(August_2018).xlsx Data/Subway_delays/Subway_&amp;_SRT_Logs_(September_2018).xlsx Data/Subway_delays/Subway_&amp;_SRT_Logs_December_2018.xlsx Data/Subway_delays/Subway_&amp;_SRT_Logs_November_2018.xlsx Data/Subway_delays/Subway_SRT_Logs(January 2018).xlsx Data/Subway_delays/Subway_SRT_Logs(July_2018).xlsx Data/Subway_delays/Subway_SRT_Logs(June2018).xlsx Data/Subway_delays/Subway_SRT_Logs(October 2018).xlsx Alternatively, we can use the tree strcuture to show the folder. &gt; fs::dir_tree(&quot;Data/Subway_delays&quot;) Data/Subway_delays ├── Subway&amp;SRT_Logs_April_2018.xlsx ├── Subway&amp;SRT_Logs_February_2018.xlsx ├── Subway&amp;SRT_Logs_March_2018.xlsx ├── Subway&amp;SRT_Logs_May_2018.xlsx ├── Subway_&amp;_SRT_Logs_(August_2018).xlsx ├── Subway_&amp;_SRT_Logs_(September_2018).xlsx ├── Subway_&amp;_SRT_Logs_December_2018.xlsx ├── Subway_&amp;_SRT_Logs_November_2018.xlsx ├── Subway_SRT_Logs(January 2018).xlsx ├── Subway_SRT_Logs(July_2018).xlsx ├── Subway_SRT_Logs(June2018).xlsx └── Subway_SRT_Logs(October 2018).xlsx Fourth, we make a shortcut if this is where we’d like to use or come back later. &gt; fs::dir_tree(here::here(&quot;Data&quot;, &quot;Subway_delays&quot;)) /Users/goal/Dropbox/R_Me/Hero_book/Data/Subway_delays ├── Subway&amp;SRT_Logs_April_2018.xlsx ├── Subway&amp;SRT_Logs_February_2018.xlsx ├── Subway&amp;SRT_Logs_March_2018.xlsx ├── Subway&amp;SRT_Logs_May_2018.xlsx ├── Subway_&amp;_SRT_Logs_(August_2018).xlsx ├── Subway_&amp;_SRT_Logs_(September_2018).xlsx ├── Subway_&amp;_SRT_Logs_December_2018.xlsx ├── Subway_&amp;_SRT_Logs_November_2018.xlsx ├── Subway_SRT_Logs(January 2018).xlsx ├── Subway_SRT_Logs(July_2018).xlsx ├── Subway_SRT_Logs(June2018).xlsx └── Subway_SRT_Logs(October 2018).xlsx Let’s chain everything together. We present the folder with the dataset - it’s like placing the meat and veggie into an oven tray. We then put the tray to an oven called purrr and it would import all the spreadsheet files in this particular folder - it’s like an oven. Finally, we use the cleaning wipe from janitor and clean up the the column names - the ambiguity bit. delays_clean &lt;- fs::dir_ls(here::here(&quot;Data&quot;, &quot;Subway_delays&quot;)) %&gt;% purrr::map_dfr(readxl::read_excel) %&gt;% janitor::clean_names() "],
["final-words.html", "8 Final Words", " 8 Final Words We have finished a nice book. "],
["references.html", "References", " References "]
]
